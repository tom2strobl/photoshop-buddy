#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('commander');
var exec = require('child_process').exec;
var _ = require('underscore');
var colors = require('colors');
var PSD = require('psd');
var fs = require('fs');

/**
 * Create a starting time for timing operations
 */

var start = new Date();


/**
 * Photoshop Class Singleton
 */

var Photoshop = {

    /**
     * Cosmetic banner on linestart
     */

    banner: '[Photoshop Buddy] '.blue,

    /**
     * On initialization the filepath is undefined
     */

    filepath: undefined,

    /**
     * Array containing the descriptions of the color modes in correct order
     */

    colorMode: ['Bitmap (monochrome)', 'Gray-scale', 'Indexed color (palette color)', 'RGB color', 'CMYK color', 'Multichannel color', 'Duotone (halftone)', 'Lab color', 'Gray16', 'RGB48', 'Lab48', 'CMYK64', 'DeepMultichannel', 'Duotone16'],

    /**
     * Initialize the App
     * @api public
     */

    init: function(){

        /**
         * Map options to Singleton functions
         */

        app.version('1.0.3')
          .option('-o, --open', 'Open file in Photoshop', Photoshop.openDocument)
          .option('-e, --export', 'Export PNG image from document', Photoshop.exportImage)
          .option('-i, --info', 'Display information', Photoshop.displayInfo)
          .option('-t, --tree', 'Show layer tree', Photoshop.showTree);

        /**
         * Extend help with examples
         */

        app.on('--help', function(){
          console.log('  Examples:');
          console.log('');
          console.log('    $ photoshop open file.psd');
          console.log('    $ photoshop --export file.psd');
          console.log('    $ photoshop -i file.psd');
          console.log('    $ photoshop -t file.psd');
          console.log('');
        });

        /**
         * Start the filename check
         */

        Photoshop.getFilePath();

        /**
         * Suggest help if there are no arguments
         */

        if(process.argv.length === 2){
            console.log(Photoshop.banner + 'Photoshop Buddy is installed! Use '+'photoshop --help'.green + ' to get started.');
        }

        /**
         * Open the document if there is just a filename
         */

        if(process.argv.length === 3 && Photoshop.checkFile()){
            Photoshop.openDocument();
        }

        /**
         * Finally parse the arguments
         */

        app.parse(process.argv);

    },

    /**
     * Check if there is an argument ending with .psd and return the first one that does so
     * @return {String}
     * @api private
     */

    getFilePath: function(){
        Photoshop.filepath = _.find(process.argv, function(arg){
            return arg.split('.').pop() === 'psd';
        });
    },

    /**
     * Check the given file path
     * @return {Boolean}
     * @api private
     */

    checkFile: function(){
        // first check if there was a .psd file specified and if it exist afterwards
        if(Photoshop.filepath === undefined ){
            if(!app.help && !app.version){
                console.log(Photoshop.banner + 'Error: '.red + 'No .psd file was specified.');
                return false;
            }else{
                return true;
            }
        }else{
            if (fs.existsSync(Photoshop.filepath)) {
                return true;
            }else{
                console.log(Photoshop.banner + 'Error: '.red + 'The specified file was not found.');
                return false;
            }
        }
    },

    /**
     * Export the document as an png image
     * @api public
     */

    exportImage: function(){
        if(Photoshop.checkFile()){
            var exportpath = Photoshop.filepath.slice(0,-4) + '.png';
            console.log(Photoshop.banner + 'Started exporting the document '+ Photoshop.filepath.green +'.');
            PSD.open(Photoshop.filepath).then(function (psd) {
              return psd.image.saveAsPng('./' + exportpath);
            }).then(function () {
              console.log(Photoshop.banner + "Finished exporting "+ exportpath.green +" in " + ((new Date()) - start) + "ms.");
            });
        }
    },

    /**
     * Display Information about the specified document
     * @api public
     */

    displayInfo: function(){
        if(Photoshop.checkFile()){
            console.log(Photoshop.banner + 'Information for the document '+ Photoshop.filepath.green +':');
            console.log('');
            PSD.open(Photoshop.filepath).then(function (psd) {
                console.log("Width: ".green + psd.header.width + "px");
                console.log("Height: ".green + psd.header.height + "px");
                console.log("Color Channels (incl. Alpha): ".green + psd.header.channels);
                console.log("Bits per Channel (1/8/16): ".green + psd.header.depth);
                console.log("Color Mode: ".green + Photoshop.colorMode[psd.header.mode]);
            }).then(function () {
                console.log('');
                console.log(Photoshop.banner + "Finished displaying the information in " + ((new Date()) - start) + "ms.");
            });
        }
    },

    /**
     * Open the specified document with Photoshop
     * @api public
     */

    openDocument: function(){
        if(Photoshop.checkFile()){
            child = exec("open "+Photoshop.filepath+' -b "com.adobe.photoshop"', function (error, stdout, stderr) {
                if (error !== null) {
                    console.log(Photoshop.banner + error);
                }else{
                    console.log(Photoshop.banner + 'Opening '+ Photoshop.filepath.green +' with Photoshop.');
                }
            });
        }
    },

    /**
     * Show the layer tree of the document
     * @api public
     */

    showTree: function(){
        if(Photoshop.checkFile()){
            console.log(Photoshop.banner + 'Layer tree for the document '+ Photoshop.filepath.green +':');
            console.log('');
            PSD.open(Photoshop.filepath).then(function (psd) {
                var tree = psd.tree().export();
                var treeLimiter;
                var getChildren = function(layer){
                    if(layer.children){
                        treeLimiter+= '-';
                        _.each(layer.children, function(layer){
                            if(layer.type === 'group'){
                                console.log(treeLimiter.blue + ' ' + layer.name.green);
                            }else{
                                console.log(treeLimiter.blue + ' ' + layer.name);
                            }
                            getChildren(layer);
                        });
                    }
                }
                _.each(tree.children,function(layer){
                    treeLimiter = '-';
                    console.log(treeLimiter.blue + ' ' + layer.name.green);
                    getChildren(layer);
                });
            }).then(function () {
                console.log('');
                console.log(Photoshop.banner + "Finished showing tree in " + ((new Date()) - start) + "ms.");
            });
        }
    }

}

/**
 * Finally init
 */

Photoshop.init();
